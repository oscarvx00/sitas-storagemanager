plugins {
    id 'java'
    id 'jacoco'
    id "org.sonarqube" version "3.4.0.2513"
}

group 'vx.sitas'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.rabbitmq:amqp-client:5.16.0'
    implementation 'com.google.code.gson:gson:2.9.1'
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.25'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.18.0'
    implementation 'org.mongodb:mongodb-driver-sync:4.7.1'
    implementation group: 'io.minio', name: 'minio', version: '8.4.3'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testImplementation group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes 'Main-Class' : 'Main'
    }
}


sourceSets {
    integrationTest {
        java.srcDir "$projectDir/src/integration/java"
        resources.srcDir "$projectDir/src/integration/resources"
        compileClasspath += sourceSets.main.output
        runtimeClasspath += sourceSets.main.output

    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

task integrationTest(type: Test) {
    description = 'Runs integrations tests.'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    group = "verification"
}

integrationTest {
    useJUnitPlatform()
}

// Configure the report to look for executionData generated during the test and integrationTest task
jacocoTestReport {
    executionData(file("${project.buildDir}/jacoco/test.exec"),
            file("${project.buildDir}/jacoco/integrationTest.exec"))
    reports {
        // for sonarqube
        xml.enabled true
        xml.destination(file("${project.buildDir}/reports/jacoco/all-tests/jacocoAllTestReport.xml"))
        // for devs
        html.enabled true
        html.destination file("${project.buildDir}/reports/jacoco/all-tests/html")
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "sitas-storagemanager"
        property 'sonar.coverage.jacoco.xmlReportPaths', "${project.buildDir}/reports/jacoco/all-tests/jacocoAllTestReport.xml"
        property 'sonar.coverage.exclusions', "src/main/java/dtos/**, src/main/java/database/POJOs/**, src/main/storageManager/**, src/main/queue/**"
    }
}